{"remainingRequest":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-hmmm/pages/questions-new.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-hmmm/pages/questions-new.vue","mtime":1668481736572},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/babel-loader/lib/index.js","mtime":1667719626894},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js","mtime":1666491603796}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["questions-new.vue"],"names":[],"mappings":";AAqfile":"questions-new.vue","sourceRoot":"src/module-hmmm/pages","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"app-container\">\n      <el-card>\n        <div slot=\"header\">{{ $route.query.id ? \"试题修改\" : \"试题录入\" }}</div>\n        <el-form\n          :model=\"ruleForm\"\n          :rules=\"rules\"\n          ref=\"ruleForm\"\n          label-width=\"120px\"\n          class=\"demo-ruleForm\"\n        >\n          <!-- 学科 -->\n          <el-form-item label=\"学科：\" prop=\"subjectID\">\n            <el-select\n              @change=\"changeSubject\"\n              v-model=\"ruleForm.subjectID\"\n              placeholder=\"请选择\"\n              style=\"width: 400px\"\n            >\n              <el-option\n                v-for=\"item in subjectOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n\n          <!-- 目录 -->\n          <el-form-item label=\"目录：\" prop=\"catalogID\">\n            <el-select\n              v-model=\"ruleForm.catalogID\"\n              placeholder=\"请选择\"\n              style=\"width: 400px\"\n            >\n              <el-option\n                v-for=\"item in catalogOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n\n          <!-- 企业 -->\n          <el-form-item label=\"企业：\" prop=\"enterpriseID\">\n            <el-select\n              v-model=\"ruleForm.enterpriseID\"\n              placeholder=\"请选择\"\n              style=\"width: 400px\"\n            >\n              <el-option\n                v-for=\"item in enterpriseOptions\"\n                :key=\"item.id\"\n                :label=\"item.company\"\n                :value=\"item.id\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n\n          <!-- 城市 -->\n          <el-form-item label=\"城市：\" prop=\"city\">\n            <el-select\n              v-model=\"ruleForm.province\"\n              placeholder=\"请选择\"\n              @change=\"getCity\"\n              style=\"width: 198px\"\n            >\n              <el-option\n                v-for=\"item in cityOptions\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              ></el-option>\n            </el-select>\n\n            <el-select\n              v-model=\"ruleForm.city\"\n              placeholder=\"请选择\"\n              style=\"width: 198px; margin-left: 4px\"\n            >\n              <el-option\n                v-for=\"item in areaOptions\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n\n          <!-- 方向 -->\n          <el-form-item label=\"方向：\" prop=\"direction\">\n            <el-select\n              v-model=\"ruleForm.direction\"\n              placeholder=\"请选择\"\n              style=\"width: 400px\"\n            >\n              <el-option\n                v-for=\"item in directionOptions\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n\n          <!-- 题型 -->\n          <el-form-item label=\"题型：\" prop=\"questionType\">\n            <el-radio-group\n              v-model=\"ruleForm.questionType\"\n              @change=\"changeRadio({})\"\n            >\n              <el-radio\n                v-for=\"item in questionType\"\n                :key=\"item.value\"\n                :label=\"item.value + ''\"\n                >{{ item.label }}</el-radio\n              >\n            </el-radio-group>\n          </el-form-item>\n\n          <!-- 难度 -->\n          <el-form-item label=\"难度：\" prop=\"difficulty\">\n            <el-radio-group v-model=\"ruleForm.difficulty\">\n              <el-radio\n                v-for=\"item in difficulty\"\n                :key=\"item.value\"\n                :label=\"item.value + ''\"\n                >{{ item.label }}</el-radio\n              >\n            </el-radio-group>\n          </el-form-item>\n\n          <!-- 题干 -->\n          <el-form-item label=\"题干：\" prop=\"question\">\n            <quill-editor\n              v-model=\"ruleForm.question\"\n              ref=\"myQuillEditor\"\n              :options=\"editorOptions\"\n              @blur='checkQustion'\n            ></quill-editor>\n          </el-form-item>\n\n          <!-- 选项 -->\n          <el-form-item\n            label=\"选项：\"\n            prop=\"options\"\n            v-if=\"ruleForm.questionType !== '3'\"\n          >\n            <div\n              class=\"option_item\"\n              v-for=\"item in ruleForm.options\"\n              :key=\"item.code\"\n            >\n              <el-radio\n                v-if=\"ruleForm.questionType === '1'\"\n                @change=\"changeRadio(item)\"\n                v-model=\"item.isRight\"\n                style=\"margin-right: 0\"\n                :label=\"true\"\n                >{{ item.code }}：</el-radio\n              >\n              <el-checkbox\n                v-if=\"ruleForm.questionType === '2'\"\n                v-model=\"item.isRight\"\n                style=\"margin-right: 0\"\n                :label=\"true\"\n                >{{ item.code }}：</el-checkbox\n              >\n              <el-input v-model=\"item.title\" style=\"width: 240px\"></el-input>\n              <el-upload\n                style=\"margin-left: 4px\"\n                action=\"https://jsonplaceholder.typicode.com/posts/\"\n                class=\"avatar-uploader\"\n                :on-success=\"(res, file) => {\n                  handleAvatarSuccess(item, res, file);\n                }\"\n                :show-file-list=\"false\"\n              >\n                <img v-if=\"item.img\" :src=\"item.img\" class=\"avatar\" />\n                <span v-else>上传图片</span>\n                <i class=\"el-icon-circle-close\" />\n              </el-upload>\n            </div>\n\n            <!-- 添加按钮 -->\n            <el-button\n              type=\"danger\"\n              :disabled=\"ruleForm.questionType !== '2'\"\n              @click=\"addOption\"\n              size=\"small\"\n              >+增加选项与答案</el-button\n            >\n          </el-form-item>\n\n          <!-- 解析视频 -->\n          <el-form-item label=\"解析视频：\">\n            <el-input\n              v-model=\"ruleForm.videoURL\"\n              style=\"width: 400px\"\n            ></el-input>\n          </el-form-item>\n\n          <!-- 答案解析 -->\n          <el-form-item label=\"答案解析：\" prop=\"answer\">\n            <quill-editor\n              v-model=\"ruleForm.answer\"\n              ref=\"myQuillEditor\"\n              :options=\"editorOptions\"\n              @blur='checkAnswer'\n            ></quill-editor>\n          </el-form-item>\n\n          <!-- 题目备注 -->\n          <el-form-item label=\"题目备注：\">\n            <el-input\n              type=\"textarea\"\n              v-model=\"ruleForm.remarks\"\n              :rows=\"4\"\n              style=\"width: 400px\"\n            ></el-input>\n          </el-form-item>\n\n          <!-- 试题标签 -->\n          <el-form-item label=\"试题标签：\">\n            <el-select\n              v-model=\"ruleForm.tags\"\n              multiple\n              filterable\n              allow-create\n              default-first-option\n              placeholder=\"请选择试题标签\"\n              style=\"width: 400px\"\n            >\n              <el-option\n                v-for=\"item in tagsOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.label\"\n              >\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <!-- 提交和修改按钮 -->\n          <el-form-item>\n            <el-button type=\"primary\" v-if=\"!$route.query.id\" @click=\"submit()\"\n              >确认提交</el-button\n            >\n            <el-button v-else @click=\"revise()\" type=\"success\"\n            >确认修改</el-button\n          >\n          </el-form-item>\n        </el-form>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { simple as getSubjectOptions } from '@/api/hmmm/subjects'\nimport { simple as getCatalogOptions } from '@/api/hmmm/directorys'\nimport { list as getCompanyOptions } from '@/api/hmmm/companys'\nimport { simple as getTagOptions } from '@/api/hmmm/tags'\nimport {\n  provinces as getCityOptions,\n  citys as getAreaOptions\n} from '@/api/hmmm/citys'\nimport { direction, questionType, difficulty } from '@/api/hmmm/constants'\nimport { add, detail, update } from '@/api/hmmm/questions'\nimport 'quill/dist/quill.core.css'\nimport 'quill/dist/quill.snow.css'\nimport 'quill/dist/quill.bubble.css'\nimport { quillEditor } from 'vue-quill-editor'\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/vs2015.css'\nexport default {\n  name: 'questions-new',\n  components: {\n    quillEditor\n  },\n  data () {\n    return {\n      // img: '',\n      editorOptions: {\n        placeholder: '',\n        modules: {\n          toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],\n            [{ list: 'ordered' }, { list: 'bullet' }],\n            ['blockquote'],\n            ['code-block', 'image', 'link']\n          ],\n          // 语法高亮\n          syntax: {\n            highlight: (text) => hljs.highlightAuto(text).value\n          }\n        }\n      },\n      ruleForm: {\n        // 学科\n        subjectID: null,\n        // 目录\n        catalogID: null,\n        // 企业\n        enterpriseID: null,\n        // 城市\n        province: null,\n        // 地区\n        city: null,\n        // 方向\n        direction: null,\n        // 题型\n        questionType: '1',\n        // 难度\n        difficulty: '1',\n        // 题干\n        question: null,\n        // 答案\n        answer: null,\n        // 选项\n        options: [\n          { isRight: false, code: 'A', title: '', img: '' },\n          { isRight: false, code: 'B', title: '', img: '' },\n          { isRight: false, code: 'C', title: '', img: '' },\n          { isRight: false, code: 'D', title: '', img: '' }\n        ]\n      },\n      rules: {\n        // 学科\n        subjectID: [\n          { required: true, message: '请选择学科', trigger: 'change' }\n        ],\n        // 目录\n        catalogID: [\n          { required: true, message: '请选择目录', trigger: 'change' }\n        ],\n        // 企业\n        enterpriseID: [\n          { required: true, message: '请选择企业', trigger: 'change' }\n        ],\n        // 城市\n        city: [{ required: true, message: '请选择地区', trigger: 'change' }],\n        // 方向\n        direction: [\n          { required: true, message: '请选择方向', trigger: 'change' }\n        ],\n        // 题型\n        questionType: [\n          { required: true, message: '请选择题型', trigger: 'change' }\n        ],\n        // 难度\n        difficulty: [\n          { required: true, message: '请选择难度', trigger: 'change' }\n        ],\n        // 题干\n        question: [\n          { required: true, message: '请输入题干', trigger: 'blur' }\n        ],\n        // 答案解析\n        answer: [\n          { required: true, message: '请输入答案解析', trigger: 'blur' }\n        ],\n        tags: [\n          { required: true, message: '请输入答案解析', trigger: 'blur' }\n        ]\n      },\n      // 学科选项\n      subjectOptions: [],\n      // 目录选项\n      catalogOptions: [],\n      // 企业选项\n      enterpriseOptions: [],\n      // 标签选项\n      tagsOptions: [],\n      // 城市选项\n      cityOptions: getCityOptions(),\n      // 地区选项\n      areaOptions: [],\n      tags: [],\n      // 方向选项\n      directionOptions: direction,\n      // 题型\n      questionType,\n      // 难度\n      difficulty\n    }\n  },\n  created () {\n    this.getSubjectOptions()\n    this.getCompanyOptions()\n    if (this.$route.query.id) {\n      this.getQuestion()\n    }\n  },\n  watch: {\n    '$route.query': function () {\n      if (this.$route.query.id) {\n        this.getQuestion()\n      } else {\n        this.ruleForm = {\n          subjectID: null,\n          catalogID: null,\n          enterpriseID: null,\n          province: null,\n          city: null,\n          direction: null,\n          questionType: '1',\n          difficulty: '1',\n          question: null,\n          answer: null,\n          tags: null,\n          options: [\n            { isRight: false, code: 'A', title: '', img: '' },\n            { isRight: false, code: 'B', title: '', img: '' },\n            { isRight: false, code: 'C', title: '', img: '' },\n            { isRight: false, code: 'D', title: '', img: '' }\n          ]\n        }\n        this.$nextTick(() => {\n          this.$refs.form.clearValidate()\n        })\n      }\n    }\n  },\n  methods: {\n    // 获取信息\n    async getQuestion () {\n      const { data } = await detail({ id: this.$route.query.id })\n      data.tags = data.tags.split(',')\n      data.options = data.options.map((item) => {\n        item.isRight = item.isRight === 1\n        return item\n      })\n      this.ruleForm = data\n      const res = await getCatalogOptions({\n        subjectID: this.ruleForm.subjectID\n      })\n      this.catalogOptions = res.data\n      const res2 = await getTagOptions({\n        subjectID: this.ruleForm.subjectID\n      })\n      this.tagsOptions = res2.data\n    },\n\n    // 改变学科并联动目录和企业选项\n    async changeSubject (subjectID) {\n      this.ruleForm.catalogID = null\n      const res = await getCatalogOptions({\n        subjectID: this.ruleForm.subjectID\n      })\n      this.catalogOptions = res.data\n      this.ruleForm.tags = null\n      const res2 = await getTagOptions({ subjectID: this.ruleForm.subjectID })\n      this.tagsOptions = res2.data\n    },\n    // 获取学科\n    async getSubjectOptions () {\n      const res = await getSubjectOptions()\n      this.subjectOptions = res.data\n      console.log(res.data)\n    },\n    // 获取企业\n    async getCompanyOptions () {\n      const res = await getCompanyOptions({ pagesize: 1000 })\n      this.enterpriseOptions = res.data.items\n    },\n    // 获取城市和地区\n    getCity (city) {\n      this.ruleForm.city = null\n      this.areaOptions = getAreaOptions(city)\n    },\n    // 校验题干\n    checkQustion () {\n      this.$refs.ruleForm.validateField('question')\n    },\n    checkAnswer () {\n      this.$refs.ruleForm.validateField('answer')\n    },\n\n    handleAvatarSuccess (item, res, file) {\n      item.img = URL.createObjectURL(file.raw)\n    },\n\n    // 题型\n    // 选择单选框\n    changeRadio (item) {\n      this.ruleForm.options.forEach((item) => {\n        item.isRight = false\n      })\n      // 自己选中\n      item.isRight = true\n    },\n    // 增加选项与答案\n    addOption () {\n      this.ruleForm.options.push({\n        isRight: false,\n        code: String.fromCharCode(65 + this.ruleForm.options.length),\n        title: '',\n        img: ''\n      })\n    },\n    // 提交\n    submit () {\n      this.$refs.ruleForm.validate(async (valid) => {\n        if (valid) {\n          const data = { ...this.ruleForm }\n          data.tags = data.tags.join(',')\n          await add(data)\n          this.$message.success('添加成功')\n          this.$router.push('/questions/list')\n        }\n      })\n    },\n    // 修改\n    revise () {\n      this.$refs.ruleForm.validate(async (valid) => {\n        if (valid) {\n          const data = { ...this.ruleForm }\n          data.tags = data.tags.join(',')\n          await update(data)\n          this.$message.success('修改成功')\n          this.$router.push('/questions/list')\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep .ql-editor {\n  height: 200px;\n}\n::v-deep .ql-toolbar.ql-snow {\n  padding: 0 8px;\n}\n.option_item {\n  padding-bottom: 20px;\n}\n.avatar-uploader {\n  display: inline-block;\n  vertical-align: middle;\n  line-height: 1;\n}\n::v-deep .avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  width: 100px;\n  height: 60px;\n  line-height: 60px;\n}\n::v-deep .avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n::v-deep .avatar-uploader i {\n  position: absolute;\n  right: 0;\n  top: 0;\n  transform: translate(50%, -50%);\n  background: #fff;\n  font-size: 18px;\n  color: #999;\n}\n.avatar {\n  width: 100px;\n  height: 60px;\n  display: block;\n  overflow: hidden;\n}\n</style>\n"]}]}