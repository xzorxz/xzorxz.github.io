{"remainingRequest":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-manage/pages/menus.vue?vue&type=style&index=1&id=980e9520&prod&lang=css&","dependencies":[{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-manage/pages/menus.vue","mtime":1668475987755},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/css-loader/dist/cjs.js","mtime":1666491586395},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1666491603796},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/postcss-loader/src/index.js","mtime":1666491592715},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js","mtime":1666491603796}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lbC10YWJsZSB0aCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTsKfQouZWwtdGFibGUgdGguaXMtbGVhZiB7CiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNlOGU4ZTg7Cn0KLmVsLXRhYmxlX19yb3cgaXsgZm9udC1zdHlsZTpub3JtYWx9Cg=="},{"version":3,"sources":["menus.vue"],"names":[],"mappings":";AAqOA;AACA;AACA;AACA;AACA;AACA;AACA","file":"menus.vue","sourceRoot":"src/module-manage/pages","sourcesContent":[" <template>\n  <div class=\"dashboard-container\">\n    <div class=\"app-container\">\n      <el-card shadow=\"never\">\n        <el-button class=\"filter-item fr\" size=\"small\" style=\"margin-left: 10px;\" @click=\"handleCreate\" type=\"primary\" icon=\"el-icon-edit\">{{$t('table.add')}}</el-button>\n        <tree-table\n        border\n        :data=\"dataList\"\n        :columns=\"columns\"\n        :tree-structure=\"true\"\n        :listLoading=\"listLoading\"\n        :rowClassStatus=\"rowClassStatus\"\n        v-on:handleUpdate=\"handleUpdate\"\n        v-on:removeUser='removeUser'\n        ></tree-table>\n\n      <!-- 新增标签弹层 -->\n        <component v-bind:is=\"MenuAdd\"\n            ref=\"editMenu\"\n            :text='text'\n            :pageTitle='pageTitle'\n            :PermissionGroupsList='PermissionGroupsList'\n            :notPointDataList='notPointDataList'\n            :parentDataList='parentDataList'\n            v-on:newDataes=\"handleLoadData\"\n            v-on:handleCloseModal=\"handleCloseModal\">\n        </component>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport treeTable from '@/components/TreeTable/index.vue'\nimport MenuAdd from './../components/menu-add'\nimport { list, remove, detail, update, add } from '@/api/base/menus'\nlet _this = []\nexport default {\n  name: 'treeTableDemo',\n  components: { treeTable, MenuAdd },\n  props: {\n    visible: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      MenuAdd: 'menuAdd',\n      listLoading: true,\n      dataList: [],\n      newArray: [],\n      pageTitle: '菜单', // 页面标题\n      text: '', // 新增、编辑文本\n      PermissionGroupsList: [], // 权限组加载\n      parentDataList: [],\n      notPointDataList: [],\n      columns: [\n        {\n          text: '标题',\n          value: 'title',\n          width: 200,\n          render: (h, params) => {\n            return h('div', [\n              h('i', {\n                class: 'ivu-icon ' + params.row.icon,\n                style: {\n                  marginLeft: `${20 * params.row.layer}px`,\n                  marginRight: '5px',\n                  fontSize: '16px'\n                }\n              }),\n              h('i', params.row.title)\n            ])\n          }\n        },\n        {\n          text: '权限点代码',\n          value: 'code'\n        }\n      ]\n    }\n  },\n  methods: {\n    // 获取列表数据\n    handleLoadData (parameters) {\n      this.listLoading = true\n      list(parameters).then(data => {\n        this.dataList = data.data\n        this.listLoading = false\n        var newArray = []\n        var icon = 'ivu-icon-document'\n        var makeNewItem = function (layer, oldItem) {\n          var icon\n\n          if (!oldItem.is_point) {\n            // TODO 判断是否权限点 fa fa-folder-open-o fa-fw文件夹    el-icon-view 眼睛  el-icon-document文件\n            if (oldItem.childs && oldItem.childs.length > 0) {\n              icon = ' fa fa-folder-open-o fa-fw'\n            } else {\n              icon = 'fa fa-file-o fa-fw'\n            }\n          } else {\n            icon = ' el-icon-view'\n          }\n          // console.log(icon)\n          var newItem = {\n            id: oldItem.id,\n            pid: oldItem.pid,\n            layer: layer,\n            is_point: oldItem.is_point,\n            code: oldItem.code,\n            title: oldItem.title,\n            icon: icon\n          }\n          return newItem\n        }\n        var makeLayer = function (layer, item) {\n          layer++\n          changeAray(layer, item)\n          layer--\n        }\n        function changeAray (layer, oldArray) {\n          for (var i = 0; i < oldArray.length; i++) {\n            newArray.push(makeNewItem(layer, oldArray[i]))\n\n            if (oldArray[i].childs && oldArray[i].childs.length > 0) {\n              makeLayer(layer, oldArray[i].childs)\n            }\n            if (oldArray[i].points && oldArray[i].points.length > 0) {\n              makeLayer(layer, oldArray[i].points)\n            }\n          }\n        }\n\n        var la = 0\n        changeAray(la, _this.dataList)\n        _this.dataList = newArray\n      })\n      // .catch(e => {\n      //   this.$message.e('错了哦，这是一条错误消息')\n      // })\n    },\n    // 权限列表\n    setupData () {\n      simple().then(data => {\n        this.PermissionGroupsList = data.data\n      })\n    },\n    // 新增用户刷新列表\n    handleLoadDataList () {\n      // this.getList()\n    },\n    // 数据删除后显示样式\n    rowClassStatus (row) {\n      if (row.row.is_deleted === 1) {\n        return 'disabled'\n      } else {\n        return ''\n      }\n    },\n    // **********************************\n\n    // 新增用户\n    handleCreate () {\n      this.text = '创建'\n      this.$refs.editMenu.dialogFormV()\n\n      this.$refs.editMenu.handleResetForm()\n    },\n    // 窗口操作**********************************\n    // 弹框关闭\n    handleCloseModal () {\n      this.$refs.editMenu.dialogFormH()\n    },\n    // 编辑\n    // 表单详情数据加载\n    handleUpdate (row) {\n      var flag = row.is_point ? 'points' : 'menu'\n      _this.$refs.editMenu.changeType(flag)\n      _this.$refs.editMenu.dialogFormV()\n      _this.$refs.editMenu.hanldeEditForm(row.id)\n    },\n\n    // 删除\n    removeUser (user) {\n      this.$confirm('此操作将永久删除用户 ' + ', 是否继续?', '提示', {\n        type: 'warning'\n      })\n        .then(() => {\n          remove({ id: user })\n            .then(response => {\n              this.$message.success('成功删除了用户' + '!')\n              this.dataList.splice(user, 1)\n              this.handleLoadData(this.requestParameters)\n            })\n            .catch(response => {\n              this.$message.error('删除失败!')\n            })\n        })\n        .catch(() => {\n          this.$message.info('已取消操作!')\n        })\n    }\n  },\n  // 挂载结束\n  mounted: function () {\n    this.handleLoadData()\n  },\n  // 创建完毕状态\n  created () {\n    _this = this\n  },\n  // 组件更新\n  updated: function () {},\n  beforeUpdate: function () {}\n}\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.alert {\n  margin: 10px 0px;\n}\n.pagination {\n  margin-top: 10px;\n  // text-align: right;\n}\n</style>\n\n<style>\n.el-table th {\n  background-color: #fafafa;\n}\n.el-table th.is-leaf {\n  border-bottom: 2px solid #e8e8e8;\n}\n.el-table__row i{ font-style:normal}\n</style>\n"]}]}