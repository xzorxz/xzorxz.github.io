{"remainingRequest":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-hmmm/pages/companys/companys.vue?vue&type=style&index=0&id=6b225fb2&rel=stylesheet%2Fscss&lang=scss&scoped=true&","dependencies":[{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-hmmm/pages/companys/companys.vue","mtime":1668225793865},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/css-loader/dist/cjs.js","mtime":1666491586395},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1666491603796},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/postcss-loader/src/index.js","mtime":1666491592715},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/sass-loader/dist/cjs.js","mtime":1666491618412},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js","mtime":1666491603796}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hbGVydCB7CiAgbWFyZ2luOiAxMHB4IDBweDsKfQoucGFnaW5hdGlvbiB7CiAgbWFyZ2luLXRvcDogMTBweDsKfQo="},{"version":3,"sources":["companys.vue"],"names":[],"mappings":";AAkXA;AACA;AACA;AACA;AACA;AACA","file":"companys.vue","sourceRoot":"src/module-hmmm/pages/companys","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"app-container\">\n      <el-card shadow=\"never\">\n        <!-- 搜索 -->\n        <el-form :model=\"form\" ref=\"form\">\n          <div class=\"filter-container\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"6\">\n                <el-form-item label=\"标签名称：\" prop=\"tags\">\n                  <el-input\n                    @keyup.enter=\"hQuery\"\n                    style=\"width: 180px;\"\n                    placeholder=\"请输入\"\n                    class=\"filter-item\"\n                    v-model=\"form.tags\"\n                  ></el-input>\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"8\">\n                <el-form-item label=\"城市\">\n                  <MyCity v-model=\"form.provAndCity\"/>\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-form-item label=\"企业简称：\" prop=\"shortName\">\n                  <el-input v-model.trim=\"form.shortName\" style=\"width: 180px;\"></el-input>\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"4\">\n                <el-form-item label=\"状态：\" prop=\"state\">\n                  <el-select\n                    class=\"filter-item\"\n                    style=\"width: 100px;\"\n                    v-model=\"form.state\"\n                    clearable\n                  >\n                    <el-option\n                      v-for=\"item in status\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\"\n                    ></el-option>\n                  </el-select>\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-form-item>\n                  <el-button\n                    :loading=\"isLoading\"\n                    size=\"small\"\n                    type=\"primary\"\n                    @click=\"hQuery\"\n                  >查询</el-button>\n                  <el-button\n                  size=\"small\"\n                  @click=\"hResetForm\">重置</el-button>\n                </el-form-item>\n              </el-col>\n            </el-row>\n\n            <el-button\n              class=\"filter-item fr\"\n              size=\"small\"\n              style=\"margin-left: 10px;\"\n              @click=\"hAddComponey\"\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n            >新增公司</el-button>\n          </div>\n        </el-form>\n        <!-- 数据记录 -->\n        <el-alert\n          v-if=\"cResultTip\"\n          :title=\"cResultTip\"\n          type=\"info\"\n          class=\"alert\"\n          :closable=\"false\"\n          show-icon\n        ></el-alert>\n        <!-- end -->\n        <!-- 数据列表 -->\n        <el-table\n          :data=\"companys\"\n          v-loading=\"isLoading\"\n          element-loading-text=\"给我一点时间\"\n          fit\n          highlight-current-row\n          style=\"width: 100%\"\n          border\n        >\n          <el-table-column align=\"center\" label=\"序号\" width=\"70\">\n            <template slot-scope=\"scope\">\n              <span>{{scope.row.id}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" label=\"企业编号\">\n            <template slot-scope=\"scope\">\n              <span>{{scope.row.number}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" label=\"企业简称\">\n            <template slot-scope=\"scope\">\n              <span>{{scope.row.shortName}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"标签\">\n            <template slot-scope=\"scope\">\n              <span>{{scope.row.tags}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" label=\"创建者\">\n            <template slot-scope=\"scope\">\n              <span>{{scope.row.creatorID}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" label=\"创建日期\">\n            <template slot-scope=\"scope\">\n              <span>{{scope.row.addDate}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" label=\"备注\">\n            <template slot-scope=\"scope\">\n              <span>{{scope.row.remarks.substring(0,3)}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" label=\"状态\" width=\"80\">\n            <template slot-scope=\"scope\">\n              <span v-if=\"scope.row.state==1\">启用</span>\n              <span v-else>禁用</span>\n            </template>\n          </el-table-column>\n          <!-- 操作按钮 -->\n          <el-table-column\n            align=\"center\"\n            label=\"操作\"\n            width=\"280\"\n            class-name=\"small-padding fixed-width\"\n          >\n            <template slot-scope=\"scope\">\n              <el-button type=\"primary\" size=\"mini\" @click=\"hEdit(scope.row.id)\">编辑</el-button>\n              <el-button type=\"primary\" size=\"mini\" @click=\"hSwitchStatus(scope.row)\">\n                <span >{{scope.row.state ===0 ? '启用' : '禁用'}}</span>\n              </el-button>\n              <el-button\n                v-if=\"scope.row.status!='deleted'\"\n                size=\"mini\"\n                type=\"danger\"\n                @click=\"hDelete(scope.row.id)\"\n              >删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <!-- end -->\n        <!-- 分页 -->\n        <div class=\"pagination\" v-show=\"total\">\n          <div class=\"pages\">\n            <el-pagination\n              background\n              @size-change=\"hSizeChange\"\n              @current-change=\"hCurrentChange\"\n              :current-page=\"Number(form.page)\"\n              :total=\"Number(total)\"\n              :page-size=\"Number(form.pagesize)\"\n              :page-sizes=\"[10,20,30, 50]\"\n              layout=\"sizes, prev, pager, next, jumper\"\n            ></el-pagination>\n          </div>\n        </div>\n        <!-- end -->\n      </el-card>\n\n      <!-- 新增标签弹层\n\n        把对话框留在父组件中，把对话框中的核心内容提出来，封装成一个组件。\n\n        为什么不把对话框一起封装？\n        (1) 便于复用。如果与对话框绑定了，则后期如果要单独拿做一个页面，则无法复用。\n        (2) 对话框留在父组件，操作更方便。\n      -->\n      <el-dialog :title=\"cTitle\"\n        :visible.sync=\"isShowDialog\"\n        v-if=\"isShowDialog\"\n        >\n        <CompanysAdd ref=\"editUser\"\n        :companyId=\"curCompanyId\"\n        @close=\"isShowDialog=false\"\n        @refresh=\"loadCompanys\"></CompanysAdd>\n\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { status } from '@/api/hmmm/constants'\nimport { list as getCompanys, remove, disabled } from '@/api/hmmm/companys'\nimport CompanysAdd from './companys-add'\nimport MyCity from './citys'\nexport default {\n  name: 'CompanysList',\n  components: {\n    CompanysAdd,\n    MyCity\n  },\n  data () {\n    return {\n      companys: [],\n      total: 0,\n\n      curCompanyId: null, // 区别于是否是编辑，还是添加\n\n      isLoading: false,\n      isShowDialog: false,\n\n      // 查询表单中的参数\n      form: {\n        shortName: '',\n        state: null,\n        tags: '',\n        provAndCity: {\n          province: '',\n          city: ''\n        },\n        page: 1,\n        pagesize: 10\n      }\n    }\n  },\n  // 创建完毕,做一次查询\n  created () {\n    this.loadCompanys()\n  },\n  computed: {\n    status () {\n      return status\n    },\n    cResultTip () {\n      return `共 ${this.total} 条记录`\n    },\n    cTitle () {\n      return this.curCompanyId ? '编辑公司' : '添加新公司'\n    }\n  },\n  methods: {\n    buildParams () {\n      const paramsObj = {}\n      const { page, pagesize, provAndCity, tags, state } = this.form\n      // 如果某一个参数是null,则axios就不会发这个参数\n      // 如果某一个参数是\"\"，axios是会发出这个参数\n      paramsObj.page = page || null\n      paramsObj.pagesize = pagesize || null\n      paramsObj.tags = tags || null\n      paramsObj.province = provAndCity.city || null\n      paramsObj.city = provAndCity.city || null\n      paramsObj.state = state === '' ? null : state\n      return paramsObj\n    },\n    // 获取列表数据\n    async loadCompanys () {\n      this.isLoading = true\n      // 构建查询参数\n      const paramsObj = this.buildParams()\n\n      try {\n        const { data: res } = await getCompanys(paramsObj)\n        // 获取数据给companys\n        this.companys = res.items\n        // 获取总条数\n        this.total = res.counts\n\n        this.isLoading = false\n      } catch (err) {\n        console.log(err)\n        this.isLoading = true\n      }\n    },\n    // 重置整个表单\n    hResetForm () {\n      // el 表单组件上有一个resetFields方法\n      this.$refs.form.resetFields()\n\n      // 由于provAndCity传给了自定义组件，它们并不是在当前表单中直接\n      // 使用的，所以，这里要去做手动清空\n      this.form.provAndCity.province = ''\n      this.form.provAndCity.city = ''\n    },\n    // 搜索信息\n    hQuery () {\n      // 重置页码\n      this.form.page = 1\n      // 重发请求\n      this.loadCompanys()\n    },\n    // 更改每页显示的条数\n    hSizeChange (val) {\n      this.form.pagesize = val\n\n      if (this.form.page === 1) {\n        this.loadCompanys()\n      }\n    },\n    // 点击某一个页码\n    hCurrentChange (curPage) {\n      this.form.page = curPage\n      this.loadCompanys()\n    },\n\n    // 新增用户、编辑用户\n    hAddComponey () {\n      this.curCompanyId = ''\n      this.isShowDialog = true\n    },\n    hEdit (id) {\n      this.curCompanyId = id\n      this.isShowDialog = true\n    },\n    async doDelete (id) {\n      try {\n        await remove({ id })\n        this.$message.success('成功删除了用户!')\n        this.loadCompanys()\n      } catch (err) {\n        this.$message.error('删除失败!')\n      }\n    },\n    // 删除\n    hDelete (userId) {\n      this.$confirm('此操作将永久删除用户 ' + ', 是否继续?', '提示', {\n        type: 'warning'\n      })\n        .then(() => {\n          this.doDelete(userId)\n        })\n        .catch(() => {\n          this.$message.info('已取消操作!')\n        })\n    },\n    async doSwitch (row) {\n      var data = {\n        id: row.id,\n        state: Number(!row.state)\n      }\n      console.log(data)\n      await disabled(data)\n        .then(response => {\n          this.$message.success('操作成功!')\n          this.loadCompanys(this.form)\n        })\n        .catch(response => {\n          this.$message.error(status + '失败!')\n        })\n    },\n    // 启用、禁用\n    hSwitchStatus (row) {\n      const tip = '已成功' + (row.state ? '禁用' : '启用') + ', 是否继续?'\n      this.$confirm(tip, '提示', {\n        type: 'warning'\n      })\n        .then(() => {\n          this.doSwitch(row)\n        })\n        .catch(() => {\n          this.$message.info('已取消操作!')\n        })\n    }\n  }\n}\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.alert {\n  margin: 10px 0px;\n}\n.pagination {\n  margin-top: 10px;\n}\n</style>\n\n<style>\n.el-table th {\n  background-color: #fafafa;\n}\n.el-table th.is-leaf {\n  border-bottom: 2px solid #e8e8e8;\n}\n.disabled td {\n  background-color: #f9f9f9;\n  color: #c1c1c1;\n}\n.disabled .el-button--primary,\n.disabled .el-button--danger {\n  background-color: #dbdada;\n  border: 1px solid #dbdada;\n  color: #999;\n  cursor: not-allowed;\n}\n</style>\n"]}]}