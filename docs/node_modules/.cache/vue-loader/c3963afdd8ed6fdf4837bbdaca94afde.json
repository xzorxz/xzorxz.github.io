{"remainingRequest":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-hmmm/pages/questions-choice.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-hmmm/pages/questions-choice.vue","mtime":1668415094834},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/babel-loader/lib/index.js","mtime":1667719626894},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js","mtime":1666491603796}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcycKaW1wb3J0IHsgY2hvaWNlLCByZW1vdmUsIGNob2ljZVB1Ymxpc2gsIGNob2ljZUNoZWNrLCBkZXRhaWwgfSBmcm9tICdAL2FwaS9obW1tL3F1ZXN0aW9ucy5qcycKaW1wb3J0IHF1ZXN0aW9ucyBmcm9tICdAL21vZHVsZS1obW1tL2NvbXBvbmVudHMvcXVlc3Rpb25zJwovLyBpbXBvcnQgeyBzaW1wbGUgfSBmcm9tICdAL2FwaS9obW1tL3N1YmplY3RzLmpzJwovLyBpbXBvcnQgeyBzaW1wbGUgYXMgZGlyZWN0b3J5c0xpc3QgfSBmcm9tICdAL2FwaS9obW1tL2RpcmVjdG9yeXMuanMnCmltcG9ydCB7CiAgY2hrVHlwZSwKICBkaWZmaWN1bHR5LAogIHB1Ymxpc2hUeXBlLAogIHF1ZXN0aW9uVHlwZSwKICBkaXJlY3Rpb24KfSBmcm9tICdAL2FwaS9obW1tL2NvbnN0YW50cycKaW1wb3J0IE15Rm9ybSBmcm9tICcuL2NvbXBhbnlzL3F1ZXN0aW9ucy1jaG9pY2UtZm9ybS52dWUnCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBNeUZvcm0sCiAgICBxdWVzdGlvbnMKICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgc3ViamVjdDogJycsCiAgICAgIHRhYmxlRGF0YTogW10sCiAgICAgIHRvdGFsOiAwLAogICAgICB2YWx1ZTogJycsCiAgICAgIGxpc3Q6IHsKICAgICAgICBzdWJqZWN0SUQ6IG51bGwsIC8vIOWtpuenkQogICAgICAgIHRhZ3M6IG51bGwsIC8vIOagh+etvuWQjeensAogICAgICAgIGtleXdvcmQ6IG51bGwsIC8vIOWFs+mUruWtlwogICAgICAgIHF1ZXN0aW9uVHlwZTogbnVsbCwgLy8g6K+V6aKY57G75Z6LCiAgICAgICAgY2l0eTogbnVsbCwgLy8g5LyB5Lia5Z+O5biCCiAgICAgICAgc2hvcnROYW1lOiBudWxsLCAvLyDkvIHkuJrnroDnp7AKICAgICAgICByZW1hcmtzOiBudWxsLCAvLyDpopjnm67lpIfms6gKICAgICAgICBjcmVhdG9ySUQ6IG51bGwsIC8vIOW9leWFpeS6ugogICAgICAgIGRpZmZpY3VsdHk6IG51bGwsIC8vIOmavuW6pgogICAgICAgIGRpcmVjdGlvbjogbnVsbCwgLy8g5pa55ZCRCiAgICAgICAgY2F0YWxvZ0lEOiBudWxsLCAvLyDnm67lvZUKICAgICAgICBwYWdlOiAxLAogICAgICAgIHB1Ymxpc2hTdGF0ZTogbnVsbCwKICAgICAgICBwYWdlc2l6ZTogNSwKICAgICAgICBjaGtTdGF0ZTogJ2FsbCcsCiAgICAgICAgcHJvdkFuZENpdHk6IHsKICAgICAgICAgIHByb3ZpbmNlOiAnJywKICAgICAgICAgIGNpdHk6ICcnCiAgICAgICAgfQogICAgICB9LAogICAgICBpc1Nob3dEaWFsb2c6IGZhbHNlLAogICAgICBkaXJlY3Rpb24sCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBhdWRpdDogewogICAgICAgIGlkOiBudWxsLAogICAgICAgIGNoa1N0YXRlOiAxLAogICAgICAgIGNoa1JlbWFya3M6ICcnCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQgKCkgewogICAgdGhpcy5nZXRjaG9pY2UoKQogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlQ2xpY2sgKHsgX3Byb3BzIH0sIGV2ZW50KSB7CiAgICAgIHRoaXMubGlzdC5jaGtTdGF0ZSA9IF9wcm9wcy5uYW1lCiAgICAgIHRoaXMuZ2V0Y2hvaWNlKCkKICAgICAgY29uc29sZS5sb2coX3Byb3BzLm5hbWUpCiAgICB9LAogICAgLy8g5q+P6aG15p2h5pWw5Y+R55Sf5Y+Y5YyW55qE5aSE55CG5Ye95pWwCiAgICBoYW5kbGVTaXplQ2hhbmdlICh2YWwpIHsKICAgICAgLy8g5pyA5paw55qE5q+P6aG15p2h5pWwCiAgICAgIHRoaXMubGlzdC5wYWdlc2l6ZSA9IHZhbAogICAgICB0aGlzLmxpc3QucGFnZSA9IDEKICAgICAgaWYgKHRoaXMubGlzdC5wYWdlID09PSAxKSB7CiAgICAgICAgdGhpcy5nZXRjaG9pY2UoKQogICAgICB9CiAgICB9LAogICAgLy8g6aG156CB5Y+R55Sf5Y+Y5YyW55qE5aSE55CG5Ye95pWwCiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlICh2YWwpIHsKICAgICAgLy8g5pyA5paw55qE6aG156CBCiAgICAgIHRoaXMubGlzdC5wYWdlID0gdmFsCiAgICAgIHRoaXMuZ2V0Y2hvaWNlKCkKICAgIH0sCiAgICAvLyDojrflj5bnsr7pgInpopjlupPliJfooagKICAgIGFzeW5jIGdldGNob2ljZSAoKSB7CiAgICAgIGNvbnN0IHBhcmFtcyA9IHsgLi4udGhpcy5saXN0IH0KICAgICAgaWYgKHBhcmFtcy5jaGtTdGF0ZSA9PT0gJ2FsbCcpIHBhcmFtcy5jaGtTdGF0ZSA9IG51bGwKICAgICAgY29uc3QgewogICAgICAgIGRhdGE6IHsgY291bnRzLCBpdGVtcywgcGFnZXNpemUsIHBhZ2UgfQogICAgICB9ID0gYXdhaXQgY2hvaWNlKHBhcmFtcykKICAgICAgY29uc29sZS5sb2coeyBjb3VudHMsIGl0ZW1zLCBwYWdlc2l6ZSB9KQogICAgICB0aGlzLnBhZ2UgPSBwYWdlIHx8IG51bGwKICAgICAgdGhpcy50YWJsZURhdGEgPSBpdGVtcwogICAgICB0aGlzLnRvdGFsID0gY291bnRzIHx8IG51bGwKICAgICAgdGhpcy5saXN0LnBhZ2VzaXplID0gK3BhZ2VzaXplIHx8IG51bGwKICAgICAgdGhpcy50YWJsZURhdGEubWFwKChpdGVtKSA9PiB7CiAgICAgICAgLy8g5aSE55CG5paH5pys5pWw5o2uCiAgICAgICAgaXRlbS5xdWVzdGlvbiA9IHRoaXMuZmlsdGVyc1RleHQoaXRlbS5xdWVzdGlvbikKICAgICAgfSkKICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfor7fmsYLmiJDlip8nKQogICAgfSwKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3lpITnkIbmlbDmja4KICAgIC8vIOWkhOeQhumimOWei+aVsOaNrgogICAgZm9ybWF0dGVycXVlc3Rpb24gKHJvdywgY29sdW1uLCBjZWxsVmFsdWUsIGluZGV4KSB7CiAgICAgIGNvbnN0IG9iaiA9IHF1ZXN0aW9uVHlwZS5maW5kKChpdGVtKSA9PiBpdGVtLnZhbHVlID09PSArcm93LnF1ZXN0aW9uVHlwZSkKICAgICAgcmV0dXJuIG9iaiA/IG9iai5sYWJlbCA6ICfmnKrnn6UnCiAgICB9LAogICAgLy8g5aSE55CG6Zq+5bqm5pWw5o2uCiAgICBmb3JtYXR0ZXJkaWZmaWN1bHR5IChyb3cpIHsKICAgICAgY29uc3Qgb2JqID0gZGlmZmljdWx0eS5maW5kKChpdGVtKSA9PiBpdGVtLnZhbHVlID09PSArcm93LmRpZmZpY3VsdHkpCiAgICAgIHJldHVybiBvYmogPyBvYmoubGFiZWwgOiAn5pyq55+lJwogICAgfSwKICAgIC8vIOWkhOeQhuWuoeaguOeKtuaAgQogICAgZm9ybWF0dGVyY2hrU3RhdGUgKHJvdykgewogICAgICBjb25zdCBvYmogPSBjaGtUeXBlLmZpbmQoKGl0ZW0pID0+IGl0ZW0udmFsdWUgPT09ICtyb3cuY2hrU3RhdGUpCiAgICAgIHJldHVybiBvYmogPyBvYmoubGFiZWwgOiAn5pyq55+lJwogICAgfSwKICAgIC8vIOWkhOeQhuWPkeW4g+eKtuaAgQogICAgZm9ybWF0dGVycHVibGlzaCAocm93KSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKHJvdy5wdWJsaXNoU3RhdGUpCiAgICAgIGNvbnN0IG9iaiA9IHB1Ymxpc2hUeXBlLmZpbmQoKGl0ZW0pID0+IGl0ZW0udmFsdWUgPT09IHJvdy5wdWJsaXNoU3RhdGUpCiAgICAgIHJldHVybiBvYmogPyBvYmoubGFiZWwgOiAn5pyq55+lJwogICAgfSwKICAgIC8vIOWkhOeQhuWvjOaWh+acrOe8lui+keWZqOi/lOWbnueahOaVsOaNrgogICAgZmlsdGVyc1RleHQgKGh0bWwpIHsKICAgICAgcmV0dXJuICgKICAgICAgICBodG1sCiAgICAgICAgICAucmVwbGFjZSgvPChwfGRpdilbXj5dKj4oPGJyXC8/PnwmbmJzcDspPFwvXDE+L2dpLCAnXG4nKQogICAgICAgICAgLnJlcGxhY2UoLzxiclwvPz4vZ2ksICdcbicpCiAgICAgICAgICAucmVwbGFjZSgvPFtePi9dKz4vZywgJycpCiAgICAgICAgICAucmVwbGFjZSgvKFxuKT88XC8oW14+XSspPi9nLCAnJykKICAgICAgICAgIC5yZXBsYWNlKC9cdTAwYTAvZywgJyAnKQogICAgICAgICAgLnJlcGxhY2UoLyZuYnNwOy9nLCAnICcpCiAgICAgICAgICAvLyAucmVwbGFjZSgvPGltZ1tePl0rc3JjXFxzKj1cXHMqWydcIl0oW14nXCJdKylbJ1wiXVtePl0qPi9nLCAnJykKICAgICAgICAgIC5yZXBsYWNlKC88XC8/KGltZ3x0YWJsZSlbXj5dKj4vZywgJycpIC8vIOWOu+mZpOWbvueJh+WSjOihqOagvAogICAgICAgICAgLnJlcGxhY2UoLzxcLz8oYSlbXj5dKj4vZywgJycpCiAgICAgICkKICAgIH0sCiAgICAvLyDlpITnkIbml7bpl7TmoLzlvI8KICAgIGZvcm1hdFRpbWUgKHRpbWUsIHN0cikgewogICAgICByZXR1cm4gZGF5anModGltZSkuZm9ybWF0KHN0cikKICAgIH0sCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t5aSE55CG5pCc57Si6KGo5Y2VCiAgICAvLyDmkJzntKLmjInpkq4KICAgIGFzeW5jIHN1Ym1pdCAoKSB7CiAgICAgIGNvbnN0IGxpbiA9IHRoaXMuJHJlZnMuZm9ybURhdGEubGlzdAogICAgICBpZiAobGluLmNoa1N0YXRlID09PSAnYWxsJykgbGluLmNoa1N0YXRlID0gbnVsbAogICAgICBjb25zdCB7CiAgICAgICAgZGF0YTogeyBjb3VudHMsIGl0ZW1zLCBwYWdlc2l6ZSB9CiAgICAgIH0gPSBhd2FpdCBjaG9pY2UobGluKQogICAgICBjb25zb2xlLmxvZyh7IGNvdW50cywgaXRlbXMsIHBhZ2VzaXplIH0pCiAgICAgIHRoaXMudGFibGVEYXRhID0gaXRlbXMKICAgICAgdGhpcy50b3RhbCA9IGNvdW50cwogICAgICB0aGlzLmxpc3QucGFnZXNpemUgPSArcGFnZXNpemUKICAgICAgdGhpcy50YWJsZURhdGEubWFwKChpdGVtKSA9PiB7CiAgICAgICAgLy8g5aSE55CG5paH5pys5pWw5o2uCiAgICAgICAgaXRlbS5xdWVzdGlvbiA9IHRoaXMuZmlsdGVyc1RleHQoaXRlbS5xdWVzdGlvbikKICAgICAgfSkKICAgIH0sCiAgICAvLyDliKDpmaTmjInpkq4KICAgIGhhbmRlbERlbCAoaWQpIHsKICAgICAgdGhpcy4kY29uZmlybSgn5q2k5pON5L2c5bCG5rC45LmF5Yig6Zmk6K+l5paH5Lu2LCDmmK/lkKbnu6fnu60/JywgJ+aPkOekuicsIHsKICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgfSkKICAgICAgICAudGhlbihhc3luYyAoKSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhpZCkKICAgICAgICAgIGF3YWl0IHJlbW92ZShpZCkKICAgICAgICAgIHRoaXMuZ2V0Y2hvaWNlKCkKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoKSA9PiB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmluZm8oJ+W3suWPlua2iOWIoOmZpCcpCiAgICAgICAgfSkKICAgIH0sCiAgICAvLyDkuIrmnrbmjInpkq4KICAgIGhhbmVsVG9wIChyb3cpIHsKICAgICAgdGhpcy4kY29uZmlybSgn5q2k5pON5L2c5bCG5LiK5p626K+l6K+V6aKYLCDmmK/lkKbnu6fnu60/JywgJ+aPkOekuicsIHsKICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgfSkKICAgICAgICAudGhlbihhc3luYyAoKSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyb3cpCiAgICAgICAgICBpZiAocm93LnB1Ymxpc2hTdGF0ZSA9PT0gMCkgewogICAgICAgICAgICByb3cucHVibGlzaFN0YXRlID0gMQogICAgICAgICAgICBhd2FpdCBjaG9pY2VQdWJsaXNoKHsKICAgICAgICAgICAgICBpZDogcm93LmlkLAogICAgICAgICAgICAgIHB1Ymxpc2hTdGF0ZTogTnVtYmVyKHJvdy5wdWJsaXNoU3RhdGUpCiAgICAgICAgICAgIH0pCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByb3cucHVibGlzaFN0YXRlID0gMAogICAgICAgICAgICBhd2FpdCBjaG9pY2VQdWJsaXNoKHsKICAgICAgICAgICAgICBpZDogcm93LmlkLAogICAgICAgICAgICAgIHB1Ymxpc2hTdGF0ZTogTnVtYmVyKHJvdy5wdWJsaXNoU3RhdGUpCiAgICAgICAgICAgIH0pCiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLmdldGNob2ljZSgpCiAgICAgICAgICByb3cucHVibGlzaFN0YXRlID09PSAxCiAgICAgICAgICAgID8gKHRoaXMuZm9yYmlkZGVuID0gdHJ1ZSkKICAgICAgICAgICAgOiAodGhpcy5mb3JiaWRkZW4gPSBmYWxzZSkKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoKSA9PiB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmluZm8oJ+W3suWPlua2iOS4iuaeticpCiAgICAgICAgfSkKICAgIH0sCiAgICAvLyDlrqHmoLgKICAgIGhhbmRlbGVjaGsgKGlkKSB7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWUKICAgICAgdGhpcy5hdWRpdC5pZCA9IGlkCiAgICB9LAogICAgLy8g5a6h5qC45oyJ6ZKuCiAgICBhc3luYyBoYW5kZWxTdWJtaXRDaGsgKCkgewogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSBmYWxzZQogICAgICBjb25zdCByZXMgPSBhd2FpdCBjaG9pY2VDaGVjayh0aGlzLiRyZWZzLmZvcm1EYXRhdHdvLm1vZGVsKQogICAgICBjb25zb2xlLmxvZyhyZXMpCiAgICAgIHRoaXMuJHJlZnMuZm9ybURhdGF0d28ucmVzZXRGaWVsZHMoKQogICAgICB0aGlzLmdldGNob2ljZSgpCiAgICB9LAogICAgLy8g6aKE6KeICiAgICBhc3luYyBoYW5kbGVQcmV2aWV3IChpZCkgewogICAgICB0aGlzLmlzU2hvd0RpYWxvZyA9IHRydWUKICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBkZXRhaWwoeyBpZCB9KQogICAgICBjb25zb2xlLmxvZyhkYXRhKQogICAgICBjb25zb2xlLmxvZyhpZCkKICAgICAgdGhpcy5saXN0ID0gZGF0YQogICAgfQoKICB9Cn0K"},{"version":3,"sources":["questions-choice.vue"],"names":[],"mappings":";AAofile":"questions-choice.vue","sourceRoot":"src/module-hmmm/pages","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"app-container\">\n      <el-card shadow=\"never\">\n        <!-- 首行 -->\n        <div class=\"butt_D1\">\n          <span style=\"font-size: 12px; color: red; margin-bottom: 20px\"\n            >说明：目前支持学科和关键字的筛选</span\n          >\n          <el-button type=\"success\" icon=\"el-icon-edit\" size=\"small\" @click=\"$router.push('/questions/new')\">新增试题</el-button>\n        </div>\n        <!-- 表单 -->\n        <MyForm :list=\"list\" @Submit=\"submit\" ref=\"formData\"></MyForm>\n        <!-- 标签 -->\n        <template>\n          <el-tabs\n            type=\"card\"\n            @tab-click=\"handleClick\"\n            class=\"tabs\"\n            value=\"all\"\n          >\n            <el-tab-pane label=\"全部\" name=\"all\" value=\"first\"></el-tab-pane>\n            <el-tab-pane label=\"待审核\" name=\"1\"></el-tab-pane>\n            <el-tab-pane label=\"已审核\" name=\"2\"></el-tab-pane>\n            <el-tab-pane label=\"已拒绝\" name=\"3\"></el-tab-pane>\n          </el-tabs>\n        </template>\n        <!-- 提示消息 -->\n        <el-alert\n          :title=\"`数据一共${this.total}条`\"\n          type=\"info\"\n          show-icon\n        ></el-alert>\n        <!-- 表格 -->\n        <el-table :data=\"tableData\" border style=\"width: 100%\">\n          <el-table-column\n            prop=\"number\"\n            label=\"试题编号\"\n            width=\"150\"\n          ></el-table-column>\n          <el-table-column\n            prop=\"subject\"\n            label=\"学科\"\n            width=\"90\"\n          ></el-table-column>\n          <el-table-column\n            prop=\"catalog\"\n            label=\"目录\"\n            width=\"80\"\n          ></el-table-column>\n          <el-table-column\n            prop=\"questionType\"\n            label=\"题型\"\n            width=\"80\"\n            :formatter=\"formatterquestion\"\n          />\n          <el-table-column\n            prop=\"question\"\n            label=\"题干\"\n            width=\"300\"\n          ></el-table-column>\n          <el-table-column prop=\"addDate\" label=\"录入时间\" width=\"120\">\n            <template #default=\"{ row }\">\n              {{ formatTime(row.addDate, \"YYYY-MM-DD\") }}\n            </template>\n          </el-table-column>\n          <el-table-column\n            prop=\"difficulty\"\n            label=\"难度\"\n            width=\"90\"\n            :formatter=\"formatterdifficulty\"\n          />\n          <el-table-column\n            prop=\"chkUser\"\n            label=\"录入人\"\n            width=\"120\"\n          ></el-table-column>\n          <el-table-column\n            prop=\"chkState\"\n            label=\"审核状态\"\n            width=\"90\"\n            :formatter=\"formatterchkState\"\n          />\n          <el-table-column\n            prop=\"chkRemarks\"\n            label=\"审核意见\"\n            width=\"90\"\n          ></el-table-column>\n          <el-table-column\n            prop=\"chkUser\"\n            label=\"审核人\"\n            width=\"120\"\n          ></el-table-column>\n          <el-table-column\n            prop=\"publishState\"\n            label=\"发布状态\"\n            width=\"120\"\n            :formatter=\"formatterpublish\"\n          />\n          <el-table-column fixed=\"right\" label=\"操作\" width=\"200\">\n            <template #default=\"{ row }\">\n              <el-button type=\"text\" size=\"small\" @click=\"handlePreview(row.id)\">预览</el-button>\n              <el-button type=\"text\" size=\"small\" @click=\"handelechk(row.id)\" :disabled=\"row.chkState !== 1  ? true : false\">审核</el-button>\n              <el-button\n                type=\"text\"\n                size=\"small\"\n                :disabled=\"row.publishState === 1 ? true : false\"\n                @click=\"$router.push({path:'/questions/new',query:{id:row.id}})\"\n                >修改</el-button\n              >\n              <el-button type=\"text\" size=\"small\" @click=\"hanelTop(row)\">{{\n                row.publishState === 0 ? \"上架\" : \"下架\"\n              }}</el-button>\n              <el-button\n                type=\"text\"\n                size=\"small\"\n                @click=\"handelDel(row.id)\"\n                :disabled=\"row.publishState === 1 ? true : false\"\n                >删除</el-button\n              >\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-pagination\n          background\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"list.page\"\n          :page-sizes=\"[1, 3, 5, 10]\"\n          :page-size=\"list.pagesize\"\n          layout=\"  prev, pager, next,sizes, jumper\"\n          :total=\"total\"\n          style=\"float: right; padding-bottom: 10px\"\n        >\n        </el-pagination>\n      </el-card>\n      <el-dialog\n        title=\"题目审核\"\n        :visible=\"dialogVisible\"\n        width=\"30%\"\n      >\n      <el-form ref=\"formDatatwo\" :model=\"audit\">\n        <el-form-item prop=\"chkState\">\n            <el-radio-group v-model=\"audit.chkState\">\n            <el-radio :label=\"2\">通过</el-radio>\n            <el-radio :label=\"3\">拒绝</el-radio>\n            </el-radio-group>\n        </el-form-item>\n        <el-form-item  prop=\"chkRemarks\">\n          <el-input type=\"textarea\" v-model=\"audit.chkRemarks\" ></el-input>\n        </el-form-item>\n      </el-form>\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"handelSubmitChk\">确 定</el-button>\n        </span>\n\n      </el-dialog>\n        <questions :isShowDialog.sync=\"isShowDialog\" :list=\"list\"></questions>\n    </div>\n  </div>\n</template>\n\n<script>\nimport dayjs from 'dayjs'\nimport { choice, remove, choicePublish, choiceCheck, detail } from '@/api/hmmm/questions.js'\nimport questions from '@/module-hmmm/components/questions'\n// import { simple } from '@/api/hmmm/subjects.js'\n// import { simple as directorysList } from '@/api/hmmm/directorys.js'\nimport {\n  chkType,\n  difficulty,\n  publishType,\n  questionType,\n  direction\n} from '@/api/hmmm/constants'\nimport MyForm from './companys/questions-choice-form.vue'\nexport default {\n  components: {\n    MyForm,\n    questions\n  },\n  data () {\n    return {\n      subject: '',\n      tableData: [],\n      total: 0,\n      value: '',\n      list: {\n        subjectID: null, // 学科\n        tags: null, // 标签名称\n        keyword: null, // 关键字\n        questionType: null, // 试题类型\n        city: null, // 企业城市\n        shortName: null, // 企业简称\n        remarks: null, // 题目备注\n        creatorID: null, // 录入人\n        difficulty: null, // 难度\n        direction: null, // 方向\n        catalogID: null, // 目录\n        page: 1,\n        publishState: null,\n        pagesize: 5,\n        chkState: 'all',\n        provAndCity: {\n          province: '',\n          city: ''\n        }\n      },\n      isShowDialog: false,\n      direction,\n      dialogVisible: false,\n      audit: {\n        id: null,\n        chkState: 1,\n        chkRemarks: ''\n      }\n    }\n  },\n  created () {\n    this.getchoice()\n  },\n  methods: {\n    handleClick ({ _props }, event) {\n      this.list.chkState = _props.name\n      this.getchoice()\n      console.log(_props.name)\n    },\n    // 每页条数发生变化的处理函数\n    handleSizeChange (val) {\n      // 最新的每页条数\n      this.list.pagesize = val\n      this.list.page = 1\n      if (this.list.page === 1) {\n        this.getchoice()\n      }\n    },\n    // 页码发生变化的处理函数\n    handleCurrentChange (val) {\n      // 最新的页码\n      this.list.page = val\n      this.getchoice()\n    },\n    // 获取精选题库列表\n    async getchoice () {\n      const params = { ...this.list }\n      if (params.chkState === 'all') params.chkState = null\n      const {\n        data: { counts, items, pagesize, page }\n      } = await choice(params)\n      console.log({ counts, items, pagesize })\n      this.page = page || null\n      this.tableData = items\n      this.total = counts || null\n      this.list.pagesize = +pagesize || null\n      this.tableData.map((item) => {\n        // 处理文本数据\n        item.question = this.filtersText(item.question)\n      })\n      this.$message.success('请求成功')\n    },\n    // ----------------------------------------------------处理数据\n    // 处理题型数据\n    formatterquestion (row, column, cellValue, index) {\n      const obj = questionType.find((item) => item.value === +row.questionType)\n      return obj ? obj.label : '未知'\n    },\n    // 处理难度数据\n    formatterdifficulty (row) {\n      const obj = difficulty.find((item) => item.value === +row.difficulty)\n      return obj ? obj.label : '未知'\n    },\n    // 处理审核状态\n    formatterchkState (row) {\n      const obj = chkType.find((item) => item.value === +row.chkState)\n      return obj ? obj.label : '未知'\n    },\n    // 处理发布状态\n    formatterpublish (row) {\n      // console.log(row.publishState)\n      const obj = publishType.find((item) => item.value === row.publishState)\n      return obj ? obj.label : '未知'\n    },\n    // 处理富文本编辑器返回的数据\n    filtersText (html) {\n      return (\n        html\n          .replace(/<(p|div)[^>]*>(<br\\/?>|&nbsp;)<\\/\\1>/gi, '\\n')\n          .replace(/<br\\/?>/gi, '\\n')\n          .replace(/<[^>/]+>/g, '')\n          .replace(/(\\n)?<\\/([^>]+)>/g, '')\n          .replace(/\\u00a0/g, ' ')\n          .replace(/&nbsp;/g, ' ')\n          // .replace(/<img[^>]+src\\\\s*=\\\\s*['\\\"]([^'\\\"]+)['\\\"][^>]*>/g, '')\n          .replace(/<\\/?(img|table)[^>]*>/g, '') // 去除图片和表格\n          .replace(/<\\/?(a)[^>]*>/g, '')\n      )\n    },\n    // 处理时间格式\n    formatTime (time, str) {\n      return dayjs(time).format(str)\n    },\n    // -------------------------处理搜索表单\n    // 搜索按钮\n    async submit () {\n      const lin = this.$refs.formData.list\n      if (lin.chkState === 'all') lin.chkState = null\n      const {\n        data: { counts, items, pagesize }\n      } = await choice(lin)\n      console.log({ counts, items, pagesize })\n      this.tableData = items\n      this.total = counts\n      this.list.pagesize = +pagesize\n      this.tableData.map((item) => {\n        // 处理文本数据\n        item.question = this.filtersText(item.question)\n      })\n    },\n    // 删除按钮\n    handelDel (id) {\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n        type: 'warning'\n      })\n        .then(async () => {\n          console.log(id)\n          await remove(id)\n          this.getchoice()\n        })\n        .catch(() => {\n          this.$message.info('已取消删除')\n        })\n    },\n    // 上架按钮\n    hanelTop (row) {\n      this.$confirm('此操作将上架该试题, 是否继续?', '提示', {\n        type: 'warning'\n      })\n        .then(async () => {\n          console.log(row)\n          if (row.publishState === 0) {\n            row.publishState = 1\n            await choicePublish({\n              id: row.id,\n              publishState: Number(row.publishState)\n            })\n          } else {\n            row.publishState = 0\n            await choicePublish({\n              id: row.id,\n              publishState: Number(row.publishState)\n            })\n          }\n          this.getchoice()\n          row.publishState === 1\n            ? (this.forbidden = true)\n            : (this.forbidden = false)\n        })\n        .catch(() => {\n          this.$message.info('已取消上架')\n        })\n    },\n    // 审核\n    handelechk (id) {\n      this.dialogVisible = true\n      this.audit.id = id\n    },\n    // 审核按钮\n    async handelSubmitChk () {\n      this.dialogVisible = false\n      const res = await choiceCheck(this.$refs.formDatatwo.model)\n      console.log(res)\n      this.$refs.formDatatwo.resetFields()\n      this.getchoice()\n    },\n    // 预览\n    async handlePreview (id) {\n      this.isShowDialog = true\n      const { data } = await detail({ id })\n      console.log(data)\n      console.log(id)\n      this.list = data\n    }\n\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep {\n  .butt_D1 {\n    display: flex;\n    justify-content: space-between;\n  }\n  .input_d1 {\n    float: left;\n  }\n  .btn {\n    float: right;\n    margin-right: 20px;\n  }\n}\n</style>\n"]}]}