{"remainingRequest":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/components/ThemePicker/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/components/ThemePicker/index.vue","mtime":1668225793847},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/thread-loader/dist/cjs.js","mtime":1666491532143},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/babel-loader/lib/index.js","mtime":1667719626894},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js","mtime":1666491603796}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmNvbnN0IHZlcnNpb24gPSByZXF1aXJlKCdlbGVtZW50LXVpL3BhY2thZ2UuanNvbicpLnZlcnNpb24gLy8gZWxlbWVudC11aSB2ZXJzaW9uIGZyb20gbm9kZV9tb2R1bGVzCmNvbnN0IE9SSUdJTkFMX1RIRU1FID0gJyM0MDlFRkYnIC8vIGRlZmF1bHQgY29sb3IKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYWxrOiAnJywgLy8gY29udGVudCBvZiB0aGVtZS1jaGFsayBjc3MKICAgICAgdGhlbWU6IE9SSUdJTkFMX1RIRU1FCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdGhlbWUgKHZhbCwgb2xkVmFsKSB7CiAgICAgIGlmICh0eXBlb2YgdmFsICE9PSAnc3RyaW5nJykgcmV0dXJuCiAgICAgIGNvbnN0IHRoZW1lQ2x1c3RlciA9IHRoaXMuZ2V0VGhlbWVDbHVzdGVyKHZhbC5yZXBsYWNlKCcjJywgJycpKQogICAgICBjb25zdCBvcmlnaW5hbENsdXN0ZXIgPSB0aGlzLmdldFRoZW1lQ2x1c3RlcihvbGRWYWwucmVwbGFjZSgnIycsICcnKSkKICAgICAgY29uc29sZS5sb2codGhlbWVDbHVzdGVyLCBvcmlnaW5hbENsdXN0ZXIpCiAgICAgIGNvbnN0IGdldEhhbmRsZXIgPSAodmFyaWFibGUsIGlkKSA9PiB7CiAgICAgICAgcmV0dXJuICgpID0+IHsKICAgICAgICAgIGNvbnN0IG9yaWdpbmFsQ2x1c3RlciA9IHRoaXMuZ2V0VGhlbWVDbHVzdGVyKAogICAgICAgICAgICBPUklHSU5BTF9USEVNRS5yZXBsYWNlKCcjJywgJycpCiAgICAgICAgICApCiAgICAgICAgICBjb25zdCBuZXdTdHlsZSA9IHRoaXMudXBkYXRlU3R5bGUoCiAgICAgICAgICAgIHRoaXNbdmFyaWFibGVdLAogICAgICAgICAgICBvcmlnaW5hbENsdXN0ZXIsCiAgICAgICAgICAgIHRoZW1lQ2x1c3RlcgogICAgICAgICAgKQoKICAgICAgICAgIGxldCBzdHlsZVRhZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKQogICAgICAgICAgaWYgKCFzdHlsZVRhZykgewogICAgICAgICAgICBzdHlsZVRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJykKICAgICAgICAgICAgc3R5bGVUYWcuc2V0QXR0cmlidXRlKCdpZCcsIGlkKQogICAgICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlVGFnKQogICAgICAgICAgfQogICAgICAgICAgc3R5bGVUYWcuaW5uZXJUZXh0ID0gbmV3U3R5bGUKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGNvbnN0IGNoYWxrSGFuZGxlciA9IGdldEhhbmRsZXIoJ2NoYWxrJywgJ2NoYWxrLXN0eWxlJykKCiAgICAgIGlmICghdGhpcy5jaGFsaykgewogICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL3VucGtnLmNvbS9lbGVtZW50LXVpQCR7dmVyc2lvbn0vbGliL3RoZW1lLWNoYWxrL2luZGV4LmNzc2AKICAgICAgICB0aGlzLmdldENTU1N0cmluZyh1cmwsIGNoYWxrSGFuZGxlciwgJ2NoYWxrJykKICAgICAgfSBlbHNlIHsKICAgICAgICBjaGFsa0hhbmRsZXIoKQogICAgICB9CgogICAgICBjb25zdCBzdHlsZXMgPSBbXS5zbGljZQogICAgICAgIC5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3N0eWxlJykpCiAgICAgICAgLmZpbHRlcihzdHlsZSA9PiB7CiAgICAgICAgICBjb25zdCB0ZXh0ID0gc3R5bGUuaW5uZXJUZXh0CiAgICAgICAgICByZXR1cm4gKAogICAgICAgICAgICBuZXcgUmVnRXhwKG9sZFZhbCwgJ2knKS50ZXN0KHRleHQpICYmICEvQ2hhbGsgVmFyaWFibGVzLy50ZXN0KHRleHQpCiAgICAgICAgICApCiAgICAgICAgfSkKICAgICAgc3R5bGVzLmZvckVhY2goc3R5bGUgPT4gewogICAgICAgIGNvbnN0IHsgaW5uZXJUZXh0IH0gPSBzdHlsZQogICAgICAgIGlmICh0eXBlb2YgaW5uZXJUZXh0ICE9PSAnc3RyaW5nJykgcmV0dXJuCiAgICAgICAgc3R5bGUuaW5uZXJUZXh0ID0gdGhpcy51cGRhdGVTdHlsZSgKICAgICAgICAgIGlubmVyVGV4dCwKICAgICAgICAgIG9yaWdpbmFsQ2x1c3RlciwKICAgICAgICAgIHRoZW1lQ2x1c3RlcgogICAgICAgICkKICAgICAgfSkKICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgbWVzc2FnZTogJ+aNouiCpOaIkOWKnycsCiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgIH0pCiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgdXBkYXRlU3R5bGUgKHN0eWxlLCBvbGRDbHVzdGVyLCBuZXdDbHVzdGVyKSB7CiAgICAgIGxldCBuZXdTdHlsZSA9IHN0eWxlCiAgICAgIG9sZENsdXN0ZXIuZm9yRWFjaCgoY29sb3IsIGluZGV4KSA9PiB7CiAgICAgICAgbmV3U3R5bGUgPSBuZXdTdHlsZS5yZXBsYWNlKG5ldyBSZWdFeHAoY29sb3IsICdpZycpLCBuZXdDbHVzdGVyW2luZGV4XSkKICAgICAgfSkKICAgICAgcmV0dXJuIG5ld1N0eWxlCiAgICB9LAoKICAgIGdldENTU1N0cmluZyAodXJsLCBjYWxsYmFjaywgdmFyaWFibGUpIHsKICAgICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCkKICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9ICgpID0+IHsKICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDQgJiYgeGhyLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICB0aGlzW3ZhcmlhYmxlXSA9IHhoci5yZXNwb25zZVRleHQucmVwbGFjZSgvQGZvbnQtZmFjZXtbXn1dK30vLCAnJykKICAgICAgICAgIGNhbGxiYWNrKCkKICAgICAgICB9CiAgICAgIH0KICAgICAgeGhyLm9wZW4oJ0dFVCcsIHVybCkKICAgICAgeGhyLnNlbmQoKQogICAgfSwKCiAgICBnZXRUaGVtZUNsdXN0ZXIgKHRoZW1lKSB7CiAgICAgIGNvbnN0IHRpbnRDb2xvciA9IChjb2xvciwgdGludCkgPT4gewogICAgICAgIGxldCByZWQgPSBwYXJzZUludChjb2xvci5zbGljZSgwLCAyKSwgMTYpCiAgICAgICAgbGV0IGdyZWVuID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMiwgNCksIDE2KQogICAgICAgIGxldCBibHVlID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoNCwgNiksIDE2KQoKICAgICAgICBpZiAodGludCA9PT0gMCkgewogICAgICAgICAgLy8gd2hlbiBwcmltYXJ5IGNvbG9yIGlzIGluIGl0cyByZ2Igc3BhY2UKICAgICAgICAgIHJldHVybiBbcmVkLCBncmVlbiwgYmx1ZV0uam9pbignLCcpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJlZCArPSBNYXRoLnJvdW5kKHRpbnQgKiAoMjU1IC0gcmVkKSkKICAgICAgICAgIGdyZWVuICs9IE1hdGgucm91bmQodGludCAqICgyNTUgLSBncmVlbikpCiAgICAgICAgICBibHVlICs9IE1hdGgucm91bmQodGludCAqICgyNTUgLSBibHVlKSkKCiAgICAgICAgICByZWQgPSByZWQudG9TdHJpbmcoMTYpCiAgICAgICAgICBncmVlbiA9IGdyZWVuLnRvU3RyaW5nKDE2KQogICAgICAgICAgYmx1ZSA9IGJsdWUudG9TdHJpbmcoMTYpCgogICAgICAgICAgcmV0dXJuIGAjJHtyZWR9JHtncmVlbn0ke2JsdWV9YAogICAgICAgIH0KICAgICAgfQoKICAgICAgY29uc3Qgc2hhZGVDb2xvciA9IChjb2xvciwgc2hhZGUpID0+IHsKICAgICAgICBsZXQgcmVkID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMCwgMiksIDE2KQogICAgICAgIGxldCBncmVlbiA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDIsIDQpLCAxNikKICAgICAgICBsZXQgYmx1ZSA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDQsIDYpLCAxNikKCiAgICAgICAgcmVkID0gTWF0aC5yb3VuZCgoMSAtIHNoYWRlKSAqIHJlZCkKICAgICAgICBncmVlbiA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiBncmVlbikKICAgICAgICBibHVlID0gTWF0aC5yb3VuZCgoMSAtIHNoYWRlKSAqIGJsdWUpCgogICAgICAgIHJlZCA9IHJlZC50b1N0cmluZygxNikKICAgICAgICBncmVlbiA9IGdyZWVuLnRvU3RyaW5nKDE2KQogICAgICAgIGJsdWUgPSBibHVlLnRvU3RyaW5nKDE2KQoKICAgICAgICByZXR1cm4gYCMke3JlZH0ke2dyZWVufSR7Ymx1ZX1gCiAgICAgIH0KCiAgICAgIGNvbnN0IGNsdXN0ZXJzID0gW3RoZW1lXQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8PSA5OyBpKyspIHsKICAgICAgICBjbHVzdGVycy5wdXNoKHRpbnRDb2xvcih0aGVtZSwgTnVtYmVyKChpIC8gMTApLnRvRml4ZWQoMikpKSkKICAgICAgfQogICAgICBjbHVzdGVycy5wdXNoKHNoYWRlQ29sb3IodGhlbWUsIDAuMSkpCiAgICAgIHJldHVybiBjbHVzdGVycwogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAQA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ThemePicker","sourcesContent":["<template>\n  <el-color-picker\n    class=\"theme-picker\"\n    popper-class=\"theme-picker-dropdown\"\n    v-model=\"theme\"></el-color-picker>\n</template>\n\n<script>\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\nconst ORIGINAL_THEME = '#409EFF' // default color\n\nexport default {\n  data () {\n    return {\n      chalk: '', // content of theme-chalk css\n      theme: ORIGINAL_THEME\n    }\n  },\n  watch: {\n    theme (val, oldVal) {\n      if (typeof val !== 'string') return\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\n      console.log(themeCluster, originalCluster)\n      const getHandler = (variable, id) => {\n        return () => {\n          const originalCluster = this.getThemeCluster(\n            ORIGINAL_THEME.replace('#', '')\n          )\n          const newStyle = this.updateStyle(\n            this[variable],\n            originalCluster,\n            themeCluster\n          )\n\n          let styleTag = document.getElementById(id)\n          if (!styleTag) {\n            styleTag = document.createElement('style')\n            styleTag.setAttribute('id', id)\n            document.head.appendChild(styleTag)\n          }\n          styleTag.innerText = newStyle\n        }\n      }\n\n      const chalkHandler = getHandler('chalk', 'chalk-style')\n\n      if (!this.chalk) {\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\n        this.getCSSString(url, chalkHandler, 'chalk')\n      } else {\n        chalkHandler()\n      }\n\n      const styles = [].slice\n        .call(document.querySelectorAll('style'))\n        .filter(style => {\n          const text = style.innerText\n          return (\n            new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\n          )\n        })\n      styles.forEach(style => {\n        const { innerText } = style\n        if (typeof innerText !== 'string') return\n        style.innerText = this.updateStyle(\n          innerText,\n          originalCluster,\n          themeCluster\n        )\n      })\n      this.$message({\n        message: '换肤成功',\n        type: 'success'\n      })\n    }\n  },\n\n  methods: {\n    updateStyle (style, oldCluster, newCluster) {\n      let newStyle = style\n      oldCluster.forEach((color, index) => {\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\n      })\n      return newStyle\n    },\n\n    getCSSString (url, callback, variable) {\n      const xhr = new XMLHttpRequest()\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\n          callback()\n        }\n      }\n      xhr.open('GET', url)\n      xhr.send()\n    },\n\n    getThemeCluster (theme) {\n      const tintColor = (color, tint) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        if (tint === 0) {\n          // when primary color is in its rgb space\n          return [red, green, blue].join(',')\n        } else {\n          red += Math.round(tint * (255 - red))\n          green += Math.round(tint * (255 - green))\n          blue += Math.round(tint * (255 - blue))\n\n          red = red.toString(16)\n          green = green.toString(16)\n          blue = blue.toString(16)\n\n          return `#${red}${green}${blue}`\n        }\n      }\n\n      const shadeColor = (color, shade) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        red = Math.round((1 - shade) * red)\n        green = Math.round((1 - shade) * green)\n        blue = Math.round((1 - shade) * blue)\n\n        red = red.toString(16)\n        green = green.toString(16)\n        blue = blue.toString(16)\n\n        return `#${red}${green}${blue}`\n      }\n\n      const clusters = [theme]\n      for (let i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\n      }\n      clusters.push(shadeColor(theme, 0.1))\n      return clusters\n    }\n  }\n}\n</script>\n\n<style>\n.theme-picker .el-color-picker__trigger {\n  vertical-align: middle;\n}\n\n.theme-picker-dropdown .el-color-dropdown__link-btn {\n  display: none;\n}\n</style>\n"]}]}