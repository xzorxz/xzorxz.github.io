{"remainingRequest":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/components/TreeTable/index.vue?vue&type=style&index=1&id=efa2b55a&lang=scss&rel=stylesheet%2Fscss&scoped=true&","dependencies":[{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/components/TreeTable/index.vue","mtime":1668225793847},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/css-loader/dist/cjs.js","mtime":1666491586395},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1666491603796},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/postcss-loader/src/index.js","mtime":1666491592715},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/sass-loader/dist/cjs.js","mtime":1666491618412},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js","mtime":1666491603796}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiRjb2xvci1ibHVlOiAjMjE5NmYzOwokc3BhY2Utd2lkdGg6IDE4cHg7Ci5tcy10cmVlLXNwYWNlIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgdG9wOiAxcHg7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGZvbnQtc3R5bGU6IG5vcm1hbDsKICBmb250LXdlaWdodDogNDAwOwogIGxpbmUtaGVpZ2h0OiAxOwogIHdpZHRoOiAkc3BhY2Utd2lkdGg7CiAgaGVpZ2h0OiAxNHB4OwogICY6OmJlZm9yZSB7CiAgICBjb250ZW50OiAnJzsKICB9Cn0KLnByb2Nlc3NDb250YWluZXIgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKfQp0YWJsZSB0ZCB7CiAgbGluZS1oZWlnaHQ6IDI2cHg7Cn0KCi50cmVlLWN0cmwgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgY29sb3I6ICRjb2xvci1ibHVlOwogIG1hcmdpbi1sZWZ0OiAtJHNwYWNlLXdpZHRoOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/TreeTable","sourcesContent":["<template>\n    <el-table :data=\"formatData\"  :row-class-name=\"rowClassStatus\" v-loading=\"listLoading\"  element-loading-text=\"给我一点时间\" fit highlight-current-row\n      style=\"width: 100%\">\n    <el-table-column v-for=\"(column, index) in columns\" :key=\"column.prop\" :width=\"column.width\" :prop=\"column.prop\"\n      :label=\"column.text\">\n      <template slot-scope=\"scope\">\n        <expand\n          v-if=\"column.render\"\n          :render=\"column.render\"\n          :row=\"scope.row\"\n          :index=\"index\"\n          :column=\"column\"\n        >\n        </expand>\n        <span v-else>\n          {{scope.row[column.value]}}\n        </span>\n      </template>\n    </el-table-column>\n    <el-table-column label=\"操作\" width=\"260\" align=\"center\">\n      <template  slot-scope=\"scope\">\n        <el-button\n          size=\"mini\"\n          type=\"primary\"\n          @click=\"handleUpdate(scope.row)\">\n          修改\n        </el-button>\n        <el-button\n          size=\"mini\"\n          type=\"danger\"\n          @click=\"handleDelete(scope.row.id)\">\n          删除\n        </el-button>\n      </template>\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\nimport Utils from './utils/dataTranslate.js'\nimport expand from './utils/expand'\nexport default {\n  name: 'treeTable',\n  components: { expand },\n  props: {\n    // 该属性是确认父组件传过来的数据是否已经是树形结构了，如果是，则不需要进行树形格式化\n    treeStructure: {\n      type: Boolean,\n      default: function () {\n        return false\n      }\n    },\n    data: {\n      type: Array,\n      default: function () {\n        return []\n      }\n    },\n    // 这是相应的字段展示\n    columns: {\n      type: Array,\n      default: function () {\n        return []\n      }\n    },\n    listLoading: {\n      type: Boolean,\n      default: false\n    },\n    // 是否默认展开所有树\n    defaultExpandAll: {\n      type: Boolean,\n      default: function () {\n        return true\n      }\n    }\n  },\n  computed: {\n    // 格式化数据源\n    formatData: function () {\n      const me = this\n      if (me.treeStructure) {\n        const data = Utils.treeToArray(me.data, null, null, me.defaultExpandAll)\n        return data\n      }\n      return me.data\n    }\n  },\n  methods: {\n    rowClassStatus: function () {\n      this.$emit('rowClassStatus')\n    },\n    handleUpdate (row) {\n      this.$emit('handleUpdate', row)\n    },\n    handleDelete (user) {\n      this.$emit('removeUser', user)\n    }\n  }\n}\n</script>\n<style rel=\"stylesheet/css\">\n.ivu-icon-ios-folder-outline {\n  content: '\\F434';\n}\n@keyframes treeTableShow {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes treeTableShow {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n</style>\n\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\n$color-blue: #2196f3;\n$space-width: 18px;\n.ms-tree-space {\n  position: relative;\n  top: 1px;\n  display: inline-block;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1;\n  width: $space-width;\n  height: 14px;\n  &::before {\n    content: '';\n  }\n}\n.processContainer {\n  width: 100%;\n  height: 100%;\n}\ntable td {\n  line-height: 26px;\n}\n\n.tree-ctrl {\n  position: relative;\n  cursor: pointer;\n  color: $color-blue;\n  margin-left: -$space-width;\n}\n</style>\n"]}]}