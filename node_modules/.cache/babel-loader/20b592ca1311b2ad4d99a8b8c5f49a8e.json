{"remainingRequest":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/babel-loader/lib/index.js!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-hmmm/pages/companys/companys-add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-hmmm/pages/companys/companys-add.vue","mtime":1668225793864},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/babel.config.js","mtime":1668225793694},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/babel-loader/lib/index.js","mtime":1667719626894},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js","mtime":1666491603796}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;AAwCA;AACA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;IACAC;MACAC;MAAA;MACAC;IACA;EACA;EACAC;IACA;MACAC;QACAC;QAAA;QACAC;QAAA;QACAC;QAAA;QACAC;UAAA;UACAC;UACAC;QACA;QACAC;QAAA;QACAC;MACA;;MACA;MACAC;QACAP,YACA;UAAAJ;UAAAY;UAAAC;QAAA,EACA;QACAJ;UAAAT;UAAAY;UAAAC;QAAA;MACA;IACA;EACA;EACA;EACAC;IACA;IACA;IACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAlB;gBAAA,IACAA;kBAAA;kBAAA;gBAAA;gBAAA;cAAA;gBAGA;gBAAA;gBAAA,OACAmB;kBAAAC;gBAAA;cAAA;gBAAA;gBAAAC;gBACA;gBACAA;kBACAZ;kBACAC;gBACA;gBACAW;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAnB,uCACA;kBACAM;kBACAC;gBAAA;gBAAA;gBAAA,OAEAa;cAAA;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;IACA;IACAC;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEAC,oCACA;kBACAhB;kBACAC;gBAAA,GACA;cAAA;gBACA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEAgB;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACAC;MAAA;MACA;QACA;QACA;UACA;UACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;AACA","names":["name","components","MyCity","props","companyId","type","required","data","formData","isFamous","shortName","company","provAndCity","province","city","tags","remarks","ruleInline","message","trigger","created","methods","loadDetail","detail","id","res","doUpdate","update","doAdd","add","console","emit","hAddorUpdate","computed","cIsShowCancel"],"sourceRoot":"src/module-hmmm/pages/companys","sources":["companys-add.vue"],"sourcesContent":["<template>\n  <div class=\"add-form\">\n    <el-form\n      :rules=\"ruleInline\"\n      ref=\"dataForm\"\n      :model=\"formData\"\n      label-position=\"left\"\n      label-width=\"150px\"\n      style=\"width: 80%; margin-left:10px;\"\n    >\n      <el-form-item label=\"企业名称\" prop=\"shortName\">\n        <el-input v-model=\"formData.shortName\"></el-input>\n        <el-checkbox v-model=\"formData.isFamous\">是否为名企</el-checkbox>\n      </el-form-item>\n      <el-form-item label=\"所属公司\" prop=\"company\">\n        <el-input v-model=\"formData.company\"></el-input>\n        <p>https://www.tianyancha.com （在此可查询所属公司全称及简称）</p>\n      </el-form-item>\n      <el-form-item label=\"城市\">\n        <MyCity v-model=\"formData.provAndCity\"/>\n      </el-form-item>\n      <el-form-item label=\"方向（企业标签）\" prop=\"tags\">\n        <el-input v-model=\"formData.tags\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"备注\" prop=\"remarks\">\n        <el-input\n          type=\"textarea\"\n          :autosize=\"{ minRows: 2, maxRows: 4}\"\n          placeholder=\"请输入\"\n          v-model=\"formData.remarks\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"hAddorUpdate\">{{$t('table.confirm')}}</el-button>\n        <el-button v-if=\"cIsShowCancel\" @click=\"$emit('close')\">{{$t('table.cancel')}}</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n<script>\n// import { update, add } from '@/api/base/users'\nimport { detail, add, update } from '@/api/hmmm/companys'\nimport MyCity from './citys'\nexport default {\n  name: 'CompanysAdd',\n  components: {\n    MyCity\n  },\n  props: {\n    // 接收从复组件中传入的公司编号\n    companyId: {\n      type: [String, Number], // 这个属性可以是字符串，也可以是Number\n      required: false // 这个属性并不是必须的\n    }\n  },\n  data () {\n    return {\n      formData: {\n        isFamous: false, // 是否是名企\n        shortName: '', // 简写\n        company: '', // 名字\n        provAndCity: { // 城市\n          province: '',\n          city: ''\n        },\n        tags: '', // 标签\n        remarks: '' // 备注\n      },\n      // 表单验证\n      ruleInline: {\n        shortName: [\n          { required: true, message: '企业简称不能为空', trigger: 'blur' }\n        ],\n        tags: [{ required: true, message: '请请输标签', trigger: 'blur' }]\n      }\n    }\n  },\n  // 创建完毕状态\n  created () {\n    // 是否传入了公司编号。\n    // 如果传入，说明是编辑，否则是添加\n    if (this.companyId) {\n      this.loadDetail()\n    }\n  },\n  methods: {\n    // 在编辑情况下，获取详情\n    async loadDetail () {\n      const { companyId } = this\n      if (!companyId) {\n        return\n      }\n      this.formData.id = companyId\n      const { data: res } = await detail({ id: companyId })\n      // 获取详情 给formData\n      res.provAndCity = {\n        province: res.province,\n        city: res.city\n      }\n      res.isFamous = !!res.isFamous\n      this.formData = res\n    },\n    // 做编辑\n    async doUpdate () {\n      const data = {\n        ...this.formData,\n        province: this.formData.provAndCity.province,\n        city: this.formData.provAndCity.city\n      }\n      await update(data)\n      this.emit()\n    },\n    // 做添加\n    async doAdd () {\n      try {\n        await add({\n          ...this.formData,\n          province: this.formData.provAndCity.province,\n          city: this.formData.provAndCity.city\n        })\n        this.emit()\n      } catch (err) {\n        console.log(err)\n      }\n    },\n    // 告诉父组件完成了\n    emit () {\n      // this.$listeners: 自动会收集所有加在这个组件上的事件监听\n      this.$listeners.close && this.$emit('close')\n      this.$listeners.refresh && this.$emit('refresh')\n    },\n    // 表单提交\n    hAddorUpdate () {\n      this.$refs.dataForm.validate(valid => {\n        // 趁早返回\n        if (!valid) {\n          this.$message.error('*号为必填项!')\n          return\n        }\n        // 如果有companyId说明是编辑，做doUpdate\n        this.companyId ? this.doUpdate() : this.doAdd()\n      })\n    }\n  },\n  computed: {\n    cIsShowCancel () {\n      return !!this.$listeners.close\n    }\n  }\n}\n</script>\n<style>\n.el-form--label-left .el-form-item__label {\n  text-align: right;\n}\n.el-form-item--medium {\n  margin-bottom: 22px;\n}\n.el-dialog__footer {\n  text-align: center;\n}\n</style>\n"]}]}