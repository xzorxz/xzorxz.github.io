{"remainingRequest":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/babel-loader/lib/index.js!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-hmmm/pages/articles.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/src/module-hmmm/pages/articles.vue","mtime":1668478493988},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/babel.config.js","mtime":1668225793694},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/babel-loader/lib/index.js","mtime":1667719626894},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/cache-loader/dist/cjs.js","mtime":1666491533034},{"path":"/Users/xiaozhang/学习/就业班学习/vue-实战/hmmm-frontend-dev/node_modules/vue-loader/lib/index.js","mtime":1666491603796}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;AA+GA;AACA;AACA;AACA;AACA;AACA;EACAA;IACAC;IACAC;EACA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAA;MACAD;MACAE;MACAC;MACAC;MACAC;MACAT;MACAU;MACAC;MACAC;MAAA;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC;kBAAAZ;kBAAAD;gBAAA;cAAA;gBAAA;gBAAA;gBAAAc;gBAAAX;gBACA;gBACA;gBACA;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;IACAY;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC;MAAA;MACA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC;cAAA;gBAAAC;gBACAC;gBACA;kBACA;gBACA;gBACA;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACA;QACAA;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC;kBACAC;kBACA3B;gBACA;cAAA;gBACA;gBACA;gBACA;gBACA4B;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;IACA;IACAC;MACA;MACA;MACA;QAAAC;MAAA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;MACAT;MACA;QACA;MACA;MACA;IACA;IACAU;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEAnB;cAAA;gBAAA;gBAAA;gBAAAC;gBAAAX;gBACA;gBACA;gBACAmB;kBAAAR;kBAAAX;gBAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;EACA;AACA","names":["components","ArticlesAdd","ArticlesPreview","data","formInline","keyword","state","pagesize","page","lists","counts","showDialog","title","showArticle","videoDialog","input","videoSrc","created","methods","getList","list","items","handleSizeChange","handleCurrentChange","indexMent","cleanClick","del","remove","res","console","formatTime","changeBtn","changeState","id","val","showEdit","type","openVideo","previewArticle","handleFilter"],"sourceRoot":"src/module-hmmm/pages","sources":["articles.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"app-container\">\n      <el-card shadow=\"never\">\n        <!-- 关键词 状态 新增技巧 -->\n        <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\n          <el-form-item label=\"关键词\">\n            <el-input v-model=\"formInline.keyword\" placeholder=\"根据文章表搜索\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"状态\">\n            <el-select v-model=\"formInline.state\" placeholder=\"请选择\">\n              <el-option label=\"启用\" value=\"1\"></el-option>\n              <el-option label=\"禁用\" value=\"0\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button  @click=\"cleanClick\">清除</el-button>\n            <el-button type=\"primary\" @click=\"handleFilter\">查询</el-button>\n          </el-form-item>\n          <el-button style=\"margin-left: 10px\" class=\"filter-item fr\" type=\"success\" @click=\"showEdit('add')\">新增技巧</el-button>\n        </el-form>\n      <!-- 数据记录 -->\n        <el-alert\n         :title=\"`数据一共 ${counts} 条`\"\n         type=\"info\"\n         :closable=\"false\"\n         show-icon>\n       </el-alert>\n       <!-- 数据列表  highlight-current-row=\"true\" -->\n        <el-table :data=\"lists\" style=\"margin-top: 20px\" >\n          <el-table-column label=\"序号\"\n            type=\"index\"\n            :index=\"indexMent\"\n            sortable=\"\"\n            width=\"80\"/>\n          <el-table-column\n          label=\"文章标题\"\n          prop=\"title\"\n          >\n          <template #default=\"{row}\">\n            {{row.title}}\n            <a @click.prevent=\"openVideo(row.videoURL)\" v-if=\"row.videoURL\" href=\"#\" class=\"el-icon-film\" style=\"color:blue\"></a>\n          </template>\n          </el-table-column>\n          <el-table-column label=\"阅读数\"  prop=\"visits\"/>\n          <el-table-column label=\"录入人\"  prop=\"username\"/>\n          <el-table-column label=\"录入时间\"  prop=\"createTime\">\n             <template #default=\"{row}\">\n              {{ formatTime(row.timeOfEntry,'YYYY-MM-DD') }}\n            </template>\n          </el-table-column>\n          <el-table-column label=\"状态\"  prop=\"state\" >\n            <template #default=\"{row}\">\n              {{row.state === 1 ? '已启用' : '已禁用'}}\n            </template>\n          </el-table-column>\n          <!-- 操作 -->\n          <el-table-column label=\"操作\" prop=\"\" fixed=\"right\" width=\"280\">\n            <template #default=\"{row}\">\n              <el-button\n              type=\"text\"\n              size=\"small\"\n              @click=\"previewArticle(row)\"\n              >预览</el-button>\n              <el-button type=\"text\" size=\"small\" @click=\"changeBtn(row)\">\n                {{row.state === 0?\"启用\":\"禁用\"}}\n                </el-button>\n              <el-button type=\"text\" size=\"small\" :disabled=\"row.state===1\"\n              @click=\"showEdit('edit',row)\" >修改</el-button>\n              <el-button type=\"text\" size=\"small\" :disabled=\"row.state===1\" @click=\"del(row)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <!-- 新增技巧 ref=\"ArticlesAddRefs\" -->\n        <ArticlesAdd\n        :show-dialog.sync=\"showDialog\"\n        @reload=\"getList\"\n        :particulars=\"data\"></ArticlesAdd>\n        <!-- 预览 -->\n        <ArticlesPreview\n        ref=\"articlesPreview\"\n        :show-article.sync=\"showArticle\"\n        :article=\"data\"\n        ></ArticlesPreview>\n      </el-card>\n    <!-- 分页器 -->\n    <el-pagination\n      style=\"float:right;padding:10px\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"page\"\n      :page-sizes=\"[5, 10, 20, 50]\"\n      :page-size=\"pagesize\"\n      layout=\" prev, pager, next,sizes,jumper\"\n      background\n      :total=\"counts\">\n    </el-pagination>\n    <!-- 视频弹窗 -->\n    <el-dialog\n      :visible=\"videoDialog\"\n      width=\"50%\"\n      @close='videoDialog=false'\n      >\n      <video :src=\"videoSrc\" controls=\"controls\" autoplay width=\"100%\" height=\"100%\">\n      </video>\n    </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { list, remove, changeState } from '@/api/hmmm/articles'\n// import Enum from '@/api/hmmm/constants'\nimport ArticlesAdd from '@/module-hmmm/components/articles-add'\nimport ArticlesPreview from '@//module-hmmm/components/articles-preview'\nimport dayjs from 'dayjs'\nexport default {\n  components: {\n    ArticlesAdd,\n    ArticlesPreview\n  },\n  data () {\n    return {\n      formInline: {\n        keyword: '',\n        state: '',\n        pagesize: 10,\n        page: 1\n      },\n      page: 1,\n      pagesize: 10,\n      lists: [],\n      counts: 0,\n      showDialog: false,\n      title: '新增技巧',\n      data: {},\n      showArticle: false,\n      videoDialog: false,\n      input: '', // input框\n      videoSrc: ''\n    }\n  },\n  created () {\n    this.getList()\n  },\n  methods: {\n    // 获取文章列表\n    async getList () {\n      const { data: { items, counts } } = await list({ page: this.page, pagesize: this.pagesize })\n      // const res = await list()\n      // console.log(res)\n      this.lists = items\n      this.counts = counts\n    },\n    handleSizeChange (val) {\n      // console.log(111)\n      this.pagesize = val\n      this.page = 1\n      this.getList()\n    },\n    handleCurrentChange (val) {\n      // console.log(111)\n      this.page = val\n      this.getList()\n    },\n    indexMent (index) {\n      return index + 1 + (this.page - 1) * this.pagesize\n    },\n    // 清除按钮\n    cleanClick () {\n      this.formInline.user = ''\n      this.formInline.region = ''\n    },\n    // 状态\n    // formatterMethod ({ state }, column, cellValue) {\n    //   // console.log(state)\n    //   return state === 1 ? '已启用' : '已禁用'\n    //   // 常量文件的方式控制\n    //   // const obj = Enum.status.find(item => item.id === +state)\n    //   // console.log(obj)\n    //   // // return obj.value\n    //   // return obj ? obj.value : '未知'\n    // },\n    // 删除员工\n    del (row) {\n      this.$confirm('确定要删除该文章吗?', '温馨提示').then(async () => {\n        const res = await remove(row)\n        console.log(res)\n        if (this.lists.length === 1 && this.page > 1) {\n          this.page--\n        }\n        this.$message.success('删除成功')\n        this.getList()\n      }).catch(() => {\n        console.log('取消')\n      })\n    },\n    // 处理日期\n    formatTime  (time, str) {\n      return dayjs(time).format(str)\n    },\n    // 启用禁用切换\n    async changeBtn (val) {\n      await changeState({\n        id: val.id,\n        state: val.state === 1 ? 0 : 1\n      })\n      // console.log(val.id, val.state)\n      // console.log(res, 8888888)\n      // this.$message.success('切换成功')\n      val.state = val.state === 1 ? 0 : 1\n    },\n    // 增加/修改\n    showEdit (type, row) {\n      this.showDialog = true\n      // const { data } = await detail({ id: row.id })\n      this.data = { ...row, type: type }\n    },\n    openVideo (url) {\n      this.videoSrc = url\n      this.videoDialog = true\n    },\n    // 预览\n    previewArticle (row) {\n      this.showArticle = true\n      this.data = { ...row }\n      console.log(row)\n      this.$nextTick(() => {\n        this.$refs.articlesPreview.open()\n      })\n      // console.log(row)\n    },\n    async handleFilter () {\n      // console.log(this.input)\n      const { data: { items, counts } } = await list(this.formInline)\n      this.lists = items\n      this.counts = counts\n      console.log({ items, counts })\n    }\n  }\n}\n\n</script>\n\n<style lang='scss' scoped>\n</style>\n"]}]}